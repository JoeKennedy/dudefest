.comment
  .comment_info
    .commenter
      = link_to comment.user.name, user_path(comment.user)
      - if comment.user.has_role?(:dude) 
        = link_to (image_tag '/DudefestSymbol.png'), users_path
      - if user_signed_in? && current_user.has_role?(:dude) 
        - if comment.user != comment.creator
          (actually by 
          %span= link_to comment.creator.name, user_path(comment.creator)
          %span> )
    .comment_datetime= display_datetime(comment.created_at)
  .comment_body.text= comment.body_html
  - if user_signed_in? && comment.parent.blank?
    .comment_reply_link= link_to 'Reply', 'javascript:void(0)'
    .comment_reply
      = simple_form_for [@commentable, comment.children.build] do |c|
        .comment_reply_field.field
          - if current_user.has_role?(:dude)
            = c.association :user, collection: @fake_users, required: false, 
                                   default: current_user, label: 'Reply as:'
          = c.text_area :body, rows: 4,
                               placeholder: 'This is where your response goes'
        = c.hidden_field :parent_id, value: comment.id
        .comment_count_submit
          .comment_count
            Reply to 
            = link_to comment.user.name, user_path(comment.user)
          .comment_actions.comment_reply_actions.actions
            = c.submit 'SUBMIT REPLY'
  .child_comments
    - comment.children.order(:created_at).each do |child|
      - if child.persisted?
        = render partial: '/comments/comment', locals: { comment: child }
