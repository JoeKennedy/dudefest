- content_for(:title, @user.name)
- meta_description @user.byline
- content_for :head do
  = tag :meta, property: 'og:title', content: @user.name
  = tag :meta, property: 'og:url', content: user_url(@user)
  = tag :meta, property: 'og:image', content: image_url(@user.display_avatar)
  = tag :meta, property: 'og:description', content: @user.bio

#main_column.home_column
  #shit_to_read= @user.name.upcase
  #user
    #user_top
      #user_avatar>
        = image_tag @user.display_avatar
      #user_info
        - if @user.has_role?(:dude)
          .user_info
            .user_info_label.short_label> Email
            .user_info_value.short_value>= mail_to @user.email
        - if @user.twitter_handle.present?
          .user_info
            .user_info_label.short_label> Twitter
            .user_info_value.short_value>
              = link_to '@' + @user.twitter_handle, 
                        'https://www.twitter.com/' + @user.twitter_handle
        .user_info
          - if @user.has_role?(:writer)
            .user_info_label.short_label> Articles
            .user_info_value.short_value>= @user.public_articles.count
          - else
            .user_info_label.short_label> Comments
            .user_info_value.short_value>= @user.comments.count
        .user_info
          .title_list_header.user_info_label> Roles at Dudefest.com
          - @user.titles.each do |title|
            .title_item.user_info_value>= title.title
          - if @user.titles.count.zero?
            .title_item.user_info_value>
              - if @user.has_role?(:fake) || @user.roles.empty?
                Reader Of Words
              - else
                Writer Of Words
    #ratings
      #ratings_title> B I O
      #ratings_list
        #user_bio.text
          - if @user.bio.present?
            = @user.bio.gsub(/\n/, '<br>').html_safe
          - else
            = @user.name 
            hasn't found the time between masturbating and cleaning it up 
            to write a bio.
    - if @user.public_articles.count > 0
      #user_articles
        #user_articles_header= 'Shit Written By ' + @user.name
        #article_summaries
          - @user.public_articles.each do |article|
            = render partial: '/articles/summary', locals: { article: article }

- if @recent_ratings.empty? && @recent_comments.empty?
  = render 'home/daily_dose'
- else
  #right_column.home_column
    #right_content
      #daily_dose Recent Activity
      - if @recent_ratings.present?
        .daily_dose_item
          .right_label RECENT RATINGS
          .recent_comments
            - @recent_ratings.each do |rating|
              = render partial: 'ratings/recent_ratings', 
                       locals: { rating: rating }
      - if @recent_comments.present?
        = render partial: 'comments/recent_comments', 
                 locals: { comments: @recent_comments }

